int solve(Node* t, int *res)
{

    if (t == NULL)
        return INT_MAX;
 
    /* If leaf node then just return node's value  */
    if (t->left == NULL && t->right == NULL)
        return t->data;
 
    /* Recursively calling left and right subtree
       for minimum value  */
    int val = min(solve(t->left, res),
                  solve(t->right, res));
 
    /* Updating res if (node value - minimum value
       from subtree) is bigger than res  */
    *res = max(*res, t->data - val);
 
    /* Returning minimum value got so far */
    return min(val, t->data);
}

//Function to return the maximum difference between any node and its ancestor.
int maxDiff(Node* root)
{
    int res=INT_MIN;
    solve(root,&res);
    return res;
    // Your code here 
}
