#include <bits/stdc++.h>
using namespace std;

bool subset(int sets[],int sum,int n)
{
    int t[sum+1][n+1];
    for(int i=0;i<n+1;i++)
    {
        for(int j=0;j<sum+1;j++)
        {

            if(j == 0)
            {
                t[i][j]=true;
            }
            else if(i == 0)
                t[i][j]=false;
        }
    }
    /*
	if(n == 0)
	{
		return false;
	}
	if(sum == 0)
	{
		return true;
	}
	*/
	for(int i=1;i<n+1;i++)
    {
        for(int j=1;j<sum+1;j++)
        {
            if(sets[i-1]<=j)
            {
                t[i][j] = (t[i-1][j])||(t[i-1][j-sets[i-1]]);
                //t[i][j]=t[i-1][j-sets[i-1]];
            }
            else{
                t[i][j]=t[i-1][j-sets[i-1]];
                //t[i][j] = (t[i-1][j])||(t[i-1][j-sets[i-1]]);
            }
        }
    }
    return t[n][sum];
    /*
	if(set[n-1]>sum)
	{
		return subset(set,sum,n-1);
	}
	else
	{
		return subset(set,sum-set[n-1],n-1)||subset(set,sum,n-1);
		//return subset(set,sum,n-1);
	}
	*/
}
int main()
{
	int n,sum=0;
	cout<<"enter size of array:"<<endl;
	cin>>n;
	int a[n];
	cout<<"enter elements:"<<endl;
	for(int i=0;i<n;i++)
	{
		cin>>a[i];
		sum += a[i];
	}
	//cout<<sum<<endl;
	if(sum%2 != 0)
        cout<<"Not possible"<<endl;
	    //cout<<subset(a,sum/2,n)<<endl;
    else
        cout<<subset(a,sum/2,n)<<endl;
	return 0;
}
