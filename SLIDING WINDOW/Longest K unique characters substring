//https://practice.geeksforgeeks.org/problems/longest-k-unique-characters-substring0853/1#
class Solution{
  public:
    int longestKSubstr(string s, int k) {
        unordered_map<char,int> mp;
        int i=0,j=0,ans=-1,temp=0;
        while(j<s.length())
        {
            mp[s[j]]++;
            if(mp.size()<k)
            {
                j++;
            }
            else if(mp.size()==k)
            {
                temp=j-i+1;
                if(temp>ans)
                {
                    ans=temp;
                }
                j++;
            }
            else if(mp.size()>k)
            {
                while(mp.size()>k)
                {
                    mp[s[i]]--;
                    if(mp[s[i]]==0)
                    {
                        mp.erase(s[i]);
                    }
                    i++;
                }
                j++;
            }
        }
        return ans;
    // your code here
    }
};
